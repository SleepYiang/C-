//阻塞和非阻塞io
//阻塞: 在进程或者线程中，发起一个调用时，在调用返回之前，进/线会被组的等待，等待中的进程/线程会让出cpu的使用权
//非阻塞：在进程或者线程中，发起一个调用时立即返回
//会阻塞的四个函数: connect() accept() send() recv();

//在传统的网络服务中采用阻塞io

//在io复用的模型中，事件循环不能被阻塞在任何环节，所以，应该采用非阻塞io

//非阻塞io调用connect()函数，不管连接是否成功，connect()都会立即返回失败，errno=EINROGRESS

//对阻塞的io调用connect()函数后，如果socket的状态是可写的，证明连接是成功的，否则是失败的

//*****************************水平触发***************************************
//读事件：如果epoll_wait触发了读事件，并表示优势局可读，如果程序没有把数据读完，再次调用了epoll_wait的时候，将立即
//再次出发读事件
//写事件：如果大宋的缓冲区没有满，把你哦啊是可以写入的数据，只要缓冲区的没有被写满，再次调用epoll_wait的时候，将立即
//触发写事件